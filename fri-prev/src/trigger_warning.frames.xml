<?xml version="1.0" encoding="UTF-8" standalone="no"?><?xml-stylesheet type="text/xsl" href="./xsl/frames.xsl"?><report><ast kind="Program"><position begColumn="1" begLine="1" begsource="trigger_warning.prev" endColumn="3" endLine="12" endsource="trigger_warning.prev"/><ast kind="WhereExpr"><position begColumn="1" begLine="1" begsource="trigger_warning.prev" endColumn="3" endLine="12" endsource="trigger_warning.prev"/><ast kind="FunCall" name="putstr"><position begColumn="1" begLine="1" begsource="trigger_warning.prev" endColumn="14" endLine="1" endsource="trigger_warning.prev"/><ast kind="AtomExpr" name="STRING(&quot;Hello&quot;)"><position begColumn="8" begLine="1" begsource="trigger_warning.prev" endColumn="14" endLine="1" endsource="trigger_warning.prev"/><seman><typ kind="STRING"/></seman></ast><seman decl="[3.2--3.26]"><typ kind="VOID"/></seman></ast><ast kind="FunDecl" name="putstr"><position begColumn="2" begLine="3" begsource="trigger_warning.prev" endColumn="26" endLine="3" endsource="trigger_warning.prev"/><ast kind="ParDecl" name="s"><position begColumn="13" begLine="3" begsource="trigger_warning.prev" endColumn="20" endLine="3" endsource="trigger_warning.prev"/><ast kind="AtomType" name="STRING"><position begColumn="15" begLine="3" begsource="trigger_warning.prev" endColumn="20" endLine="3" endsource="trigger_warning.prev"/><seman><typ kind="STRING"/></seman></ast><seman><typ kind="STRING"/></seman><access offset="8" size="8"/></ast><ast kind="AtomType" name="VOID"><position begColumn="23" begLine="3" begsource="trigger_warning.prev" endColumn="26" endLine="3" endsource="trigger_warning.prev"/><seman><typ kind="VOID"/></seman></ast><seman><typ kind="FUN"><typ kind="STRING"/><typ kind="VOID"/></typ></seman><frame hidRegsSize="0" inpCallSize="16" label="_putstr" level="0" locVarsSize="0" outCallSize="0" size="16" tmpVarsSize="0"/></ast><ast kind="FunDef" name="f"><position begColumn="2" begLine="4" begsource="trigger_warning.prev" endColumn="5" endLine="11" endsource="trigger_warning.prev"/><ast kind="ParDecl" name="i"><position begColumn="8" begLine="4" begsource="trigger_warning.prev" endColumn="16" endLine="4" endsource="trigger_warning.prev"/><ast kind="AtomType" name="INTEGER"><position begColumn="10" begLine="4" begsource="trigger_warning.prev" endColumn="16" endLine="4" endsource="trigger_warning.prev"/><seman><typ kind="INTEGER"/></seman></ast><seman><typ kind="INTEGER"/></seman><access offset="8" size="8"/></ast><ast kind="AtomType" name="INTEGER"><position begColumn="19" begLine="4" begsource="trigger_warning.prev" endColumn="25" endLine="4" endsource="trigger_warning.prev"/><seman><typ kind="INTEGER"/></seman></ast><ast kind="WhereExpr"><position begColumn="29" begLine="4" begsource="trigger_warning.prev" endColumn="5" endLine="11" endsource="trigger_warning.prev"/><ast kind="AtomExpr" name="INTEGER(5)"><position begColumn="29" begLine="4" begsource="trigger_warning.prev" endColumn="29" endLine="4" endsource="trigger_warning.prev"/><seman value="5"><typ kind="INTEGER"/></seman></ast><ast kind="FunDecl" name="undecl"><position begColumn="4" begLine="6" begsource="trigger_warning.prev" endColumn="23" endLine="6" endsource="trigger_warning.prev"/><ast kind="AtomType" name="INTEGER"><position begColumn="17" begLine="6" begsource="trigger_warning.prev" endColumn="23" endLine="6" endsource="trigger_warning.prev"/><seman><typ kind="INTEGER"/></seman></ast><seman><typ kind="FUN"><typ kind="INTEGER"/></typ></seman><frame hidRegsSize="0" inpCallSize="8" label="function0___undecl" level="1" locVarsSize="0" outCallSize="0" size="16" tmpVarsSize="0"/></ast><ast kind="FunDef" name="f1"><position begColumn="4" begLine="7" begsource="trigger_warning.prev" endColumn="6" endLine="10" endsource="trigger_warning.prev"/><ast kind="AtomType" name="VOID"><position begColumn="13" begLine="7" begsource="trigger_warning.prev" endColumn="16" endLine="7" endsource="trigger_warning.prev"/><seman><typ kind="VOID"/></seman></ast><ast kind="WhereExpr"><position begColumn="18" begLine="7" begsource="trigger_warning.prev" endColumn="6" endLine="10" endsource="trigger_warning.prev"/><ast kind="AtomExpr" name="VOID(null)"><position begColumn="18" begLine="7" begsource="trigger_warning.prev" endColumn="21" endLine="7" endsource="trigger_warning.prev"/><seman><typ kind="VOID"/></seman></ast><ast kind="FunDef" name="f2"><position begColumn="5" begLine="9" begsource="trigger_warning.prev" endColumn="35" endLine="9" endsource="trigger_warning.prev"/><ast kind="ParDecl" name="a"><position begColumn="12" begLine="9" begsource="trigger_warning.prev" endColumn="20" endLine="9" endsource="trigger_warning.prev"/><ast kind="AtomType" name="INTEGER"><position begColumn="14" begLine="9" begsource="trigger_warning.prev" endColumn="20" endLine="9" endsource="trigger_warning.prev"/><seman><typ kind="INTEGER"/></seman></ast><seman><typ kind="INTEGER"/></seman><access offset="8" size="8"/></ast><ast kind="AtomType" name="INTEGER"><position begColumn="25" begLine="9" begsource="trigger_warning.prev" endColumn="31" endLine="9" endsource="trigger_warning.prev"/><seman><typ kind="INTEGER"/></seman></ast><ast kind="AtomExpr" name="INTEGER(5)"><position begColumn="35" begLine="9" begsource="trigger_warning.prev" endColumn="35" endLine="9" endsource="trigger_warning.prev"/><seman value="5"><typ kind="INTEGER"/></seman></ast><seman><typ kind="FUN"><typ kind="INTEGER"/><typ kind="INTEGER"/></typ></seman><frame hidRegsSize="0" inpCallSize="16" label="function1___f2" level="2" locVarsSize="0" outCallSize="0" size="16" tmpVarsSize="0"/></ast><seman><typ kind="VOID"/></seman></ast><seman><typ kind="FUN"><typ kind="VOID"/></typ></seman><frame hidRegsSize="0" inpCallSize="8" label="function2___f1" level="1" locVarsSize="0" outCallSize="16" size="32" tmpVarsSize="0"/></ast><seman><typ kind="INTEGER"/></seman></ast><seman><typ kind="FUN"><typ kind="INTEGER"/><typ kind="INTEGER"/></typ></seman><frame hidRegsSize="0" inpCallSize="16" label="_f" level="0" locVarsSize="0" outCallSize="8" size="24" tmpVarsSize="0"/></ast><seman><typ kind="VOID"/></seman></ast><seman><typ kind="VOID"/></seman></ast></report>